//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeoDKPOCDMPTest.Web.WS1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WS1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCompanyByCvrNumber", ReplyAction="http://tempuri.org/IService1/GetCompanyByCvrNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IService1/GetCompanyByCvrNumberFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        GeoDKPOCDMPTest.Shared.Contracts.CompanyInfo GetCompanyByCvrNumber(int cvrNummer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCompanyByCvrNumber", ReplyAction="http://tempuri.org/IService1/GetCompanyByCvrNumberResponse")]
        System.Threading.Tasks.Task<GeoDKPOCDMPTest.Shared.Contracts.CompanyInfo> GetCompanyByCvrNumberAsync(int cvrNummer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDatasets", ReplyAction="http://tempuri.org/IService1/GetDatasetsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IService1/GetDatasetsFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        GeoDKPOCDMPTest.Shared.Contracts.Datasets GetDatasets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDatasets", ReplyAction="http://tempuri.org/IService1/GetDatasetsResponse")]
        System.Threading.Tasks.Task<GeoDKPOCDMPTest.Shared.Contracts.Datasets> GetDatasetsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetDataset", ReplyAction="http://tempuri.org/IService1/SetDatasetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IService1/SetDatasetFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        string SetDataset(System.Nullable<int> valueA, System.Nullable<int> valueB, System.Nullable<int> valueC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetDataset", ReplyAction="http://tempuri.org/IService1/SetDatasetResponse")]
        System.Threading.Tasks.Task<string> SetDatasetAsync(System.Nullable<int> valueA, System.Nullable<int> valueB, System.Nullable<int> valueC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CalculateDataSet", ReplyAction="http://tempuri.org/IService1/CalculateDataSetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IService1/CalculateDataSetFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        GeoDKPOCDMPTest.Shared.Contracts.CalculatedDataset CalculateDataSet(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CalculateDataSet", ReplyAction="http://tempuri.org/IService1/CalculateDataSetResponse")]
        System.Threading.Tasks.Task<GeoDKPOCDMPTest.Shared.Contracts.CalculatedDataset> CalculateDataSetAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : GeoDKPOCDMPTest.Web.WS1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<GeoDKPOCDMPTest.Web.WS1.IService1>, GeoDKPOCDMPTest.Web.WS1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GeoDKPOCDMPTest.Shared.Contracts.CompanyInfo GetCompanyByCvrNumber(int cvrNummer) {
            return base.Channel.GetCompanyByCvrNumber(cvrNummer);
        }
        
        public System.Threading.Tasks.Task<GeoDKPOCDMPTest.Shared.Contracts.CompanyInfo> GetCompanyByCvrNumberAsync(int cvrNummer) {
            return base.Channel.GetCompanyByCvrNumberAsync(cvrNummer);
        }
        
        public GeoDKPOCDMPTest.Shared.Contracts.Datasets GetDatasets() {
            return base.Channel.GetDatasets();
        }
        
        public System.Threading.Tasks.Task<GeoDKPOCDMPTest.Shared.Contracts.Datasets> GetDatasetsAsync() {
            return base.Channel.GetDatasetsAsync();
        }
        
        public string SetDataset(System.Nullable<int> valueA, System.Nullable<int> valueB, System.Nullable<int> valueC) {
            return base.Channel.SetDataset(valueA, valueB, valueC);
        }
        
        public System.Threading.Tasks.Task<string> SetDatasetAsync(System.Nullable<int> valueA, System.Nullable<int> valueB, System.Nullable<int> valueC) {
            return base.Channel.SetDatasetAsync(valueA, valueB, valueC);
        }
        
        public GeoDKPOCDMPTest.Shared.Contracts.CalculatedDataset CalculateDataSet(int Id) {
            return base.Channel.CalculateDataSet(Id);
        }
        
        public System.Threading.Tasks.Task<GeoDKPOCDMPTest.Shared.Contracts.CalculatedDataset> CalculateDataSetAsync(int Id) {
            return base.Channel.CalculateDataSetAsync(Id);
        }
    }
}
